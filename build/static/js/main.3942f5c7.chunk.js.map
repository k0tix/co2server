{"version":3,"sources":["components/SiteHeader.js","services/countries.js","reducers/countryReducer.js","actions/index.js","reducers/searchReducer.js","components/EmissionChart.js","containers/SearchBar.js","components/Footer.js","components/MapSelector.js","App.js","store.js","index.js"],"names":["style","margin","textAlign","SiteHeader","_ref","title","react_default","a","createElement","Header","as","countries","getAll","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","this","apply","arguments","getWithCode","_ref2","_callee2","code","_context2","concat","_x","initialState","country","countryReducer","state","length","undefined","action","type","searchText","perCapita","results","searchReducer","assign","text","objectSpread","EmissionChart","name","id","values","Segment","raised","index_esm","width","height","loader","Dimmer","active","Loader","size","chartType","options","hAxis","vAxis","SearchBar","handleSearchTextChange","event","preventDefault","_this","props","updateSearchText","target","value","handleSearch","searchCountry","togglePerCapita","processdata","emissions","Array","forEach","push","year","parseInt","handleResultSelect","result","_this2","Grid","centered","Column","maxWidth","Form","onSubmit","Field","padding","Search","fluid","icon","Icon","inverted","circular","link","color","placeholder","onSearchChange","onResultSelect","resultRenderer","renderResult","selectFirstResult","minCharacters","filteredResults","Group","inline","Checkbox","toggle","label","onChange","onClick","console","log","Divider","horizontal","Label","Container","components_EmissionChart","React","Component","Item","key","connect","search","filter","toLowerCase","includes","map","dispatch","countryService","Footer","Date","vertical","marginTop","columns","wrapperStyles","App","componentDidMount","resultInitialization","verticalAlign","Row","components_SiteHeader","containers_SearchBar","components_Footer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.3942f5c7.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Header} from 'semantic-ui-react'\r\n\r\nconst style = {\r\n    margin: '1em 0em',\r\n    textAlign: 'center'\r\n}\r\n\r\nconst SiteHeader = ({title}) => {\r\n    return (\r\n        <div>\r\n            <Header style={style} as='h2'>CO<sup>2</sup>-EMISSIONS</Header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SiteHeader","import axios from 'axios'\r\nconst baseUrl = '/api/country'\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst getWithCode = async (code) => {\r\n    const response = await axios.get(`${baseUrl}/${code}`)\r\n    return response.data\r\n}\r\n\r\nexport default { getAll, getWithCode }","import countryService from '../services/countries'\r\n\r\nimport { SEARCH_COUNTRY } from '../actions'\r\n\r\nconst initialState = {\r\n    country: {}\r\n}\r\n\r\nconst countryReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SEARCH_COUNTRY:\r\n            return action.country\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const searchCountry = (code) => {\r\n    return async(dispatch) => {\r\n        const country = await countryService.getWithCode(code)\r\n        dispatch({\r\n            type: SEARCH_COUNTRY,\r\n            country\r\n        })\r\n    }\r\n}\r\n\r\nexport default countryReducer","export const UPDATE_SEARCHTEXT = 'UPDATE_SEARCHTEXT'\r\nexport const TOGGLE_PERCAPITA = 'TOGGLE_PERCAPITA'\r\nexport const SEARCH_COUNTRY = 'SEARCH_COUNTRY'\r\nexport const INIT_SEARCH_RESULTS = 'INIT_SEARCH_RESULTS'","import { UPDATE_SEARCHTEXT, TOGGLE_PERCAPITA, INIT_SEARCH_RESULTS } from '../actions'\r\n\r\nimport countryService from '../services/countries'\r\n\r\nconst initialState = {\r\n    searchText: '',\r\n    perCapita: false,\r\n    results: []\r\n}\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_SEARCHTEXT:\r\n            return Object.assign({}, state, {searchText: action.text})\r\n        case TOGGLE_PERCAPITA:\r\n            return {...state, perCapita: !state.perCapita}\r\n        case INIT_SEARCH_RESULTS:\r\n            return {...state, results: action.results}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const resultInitialization = () => {\r\n    return async(dispatch) => {\r\n        const results = await countryService.getAll()\r\n        dispatch({\r\n            type: INIT_SEARCH_RESULTS,\r\n            results\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateSearchText = (text) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: UPDATE_SEARCHTEXT,\r\n            text\r\n        })\r\n    }\r\n}\r\n\r\nexport const togglePerCapita = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: TOGGLE_PERCAPITA\r\n        })\r\n    }\r\n}\r\n\r\nexport default searchReducer","import React from 'react'\r\nimport { Chart } from 'react-google-charts'\r\nimport { Loader, Segment, Dimmer } from 'semantic-ui-react'\r\n\r\nconst EmissionChart = ({name, id, values, perCapita}) => {\r\n    return (\r\n        <div>\r\n            <Segment raised>\r\n                <Chart\r\n                width={'100%'}\r\n                height={'18em'}\r\n                loader={\r\n                    <div style={{height: '8em'}}>\r\n                    <Dimmer active>\r\n                    <Loader size='big'>Loading</Loader>\r\n                  </Dimmer>\r\n                  </div>\r\n                }\r\n                chartType='LineChart'\r\n                data={values}\r\n                options={{\r\n                    title: `${name} (${id})`,\r\n                    hAxis: {title: 'Year'},\r\n                    vAxis: {title: 'Emission (kt)'}\r\n                }}\r\n            />\r\n            </Segment>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmissionChart","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {searchCountry} from '../reducers/countryReducer'\r\nimport { togglePerCapita, updateSearchText } from '../reducers/searchReducer'\r\nimport { Item, Icon, Form, Checkbox, Grid, Divider, Label, Segment, Search, Container } from 'semantic-ui-react'\r\n\r\nimport EmissionChart from '../components/EmissionChart'\r\n\r\nimport data from '../test'\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    handleSearchTextChange = (event) => {\r\n        event.preventDefault()\r\n        this.props.updateSearchText(event.target.value)\r\n    }\r\n\r\n    handleSearch = () => {\r\n        this.props.searchCountry(this.props.searchText)\r\n    }\r\n\r\n    togglePerCapita = () => {\r\n        this.props.togglePerCapita()\r\n    }\r\n\r\n    processdata = (values) => {\r\n        /*var year = 1960\r\n        var emissions = new Array(['Year', 'Emissions'])\r\n        values.forEach(value => {\r\n            emissions.push([`${year}`, value])\r\n            year++\r\n        }\r\n        )\r\n\r\n        return emissions*/\r\n        var emissions = new Array(['Year', 'Emission'])\r\n        values.forEach(value => {\r\n            emissions.push([value.year, parseInt(value.value)])\r\n        })\r\n        return emissions\r\n    }\r\n\r\n    handleResultSelect = (event, { result }) => {\r\n        this.props.updateSearchText(result.name)\r\n        this.props.searchCountry(result.code)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid centered>\r\n                <Grid.Column style={{ maxWidth: '600px' }}>\r\n                    <Form size='large' onSubmit={this.props.handleSearch} >\r\n                        <Segment>\r\n                            <Form.Field style={{ padding: '1em' }}>\r\n                            <Search fluid\r\n                                size='huge'\r\n                                icon={<Icon name='search' inverted circular link color='blue' />}\r\n                                placeholder='country name...'\r\n                                value={this.props.searchText}\r\n                                onSearchChange={this.handleSearchTextChange}\r\n                                onResultSelect={this.handleResultSelect}\r\n                                resultRenderer={renderResult}\r\n                                selectFirstResult={true}\r\n                                minCharacters={2}\r\n                                results={this.props.filteredResults}\r\n                            />\r\n                        </Form.Field>\r\n    \r\n                        <Form.Group inline style={{ margin: '1em' }}>\r\n                            <Form.Field>\r\n                                <Checkbox toggle label='per capita' onChange={this.togglePerCapita} onClick={() => console.log(this.props)}/>\r\n                            </Form.Field>\r\n                        </Form.Group>\r\n                        </Segment>\r\n                        \r\n                    </Form>\r\n    \r\n                    <Divider horizontal>OR</Divider>\r\n                    <Segment textAlign='center'>\r\n                        <Label color='pink' size='big'>Choose a country from a map</Label>\r\n                    </Segment>\r\n\r\n            <Container fluid>\r\n\r\n            \r\n                    {this.props.country.emissions === undefined ? null : \r\n                        <EmissionChart name={this.props.country.name} id={this.props.country.code} values={this.processdata(this.props.country.emissions)}>\r\n                        </EmissionChart>\r\n\r\n                    }\r\n               </Container>                             \r\n                </Grid.Column>\r\n\r\n                    \r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst renderResult = ({name}) => (\r\n    <Item key={name}>{name}</Item>\r\n)\r\n\r\nconst filterResults = (results, text) => {\r\n    return results.filter(result => result.name.toLowerCase().includes(text.toLowerCase())).map(value => {\r\n        var newValue = {\r\n            ...value,\r\n            title: value.name,\r\n            key: value.code\r\n        }\r\n\r\n        return newValue\r\n    })\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchText: state.search.searchText,\r\n        perCapita: state.search.perCapita,\r\n        filteredResults: filterResults(state.search.results, state.search.searchText),\r\n        country: state.country\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { togglePerCapita, updateSearchText, searchCountry}\r\n)(SearchBar)","import React from 'react'\r\nimport { Segment, Container, Grid, Icon } from 'semantic-ui-react';\r\n\r\nconst Footer = () => {\r\n    const date = new Date()\r\n    return (\r\n        <Segment inverted vertical style={{padding: '5em 0em', marginTop: '24em'}}>\r\n            <Grid centered columns={2}>\r\n                <Grid.Column width={2}>\r\n                    <Icon name='github' size='huge'></Icon>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from \"react\"\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\"\n\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\",\n}\n\nclass CountryMap extends Component {\n  render() {\n    return (\n      <div style={wrapperStyles}>\n        <ComposableMap\n          projection=\"mercator\"\n          projectionConfig={{ scale: 10000 }}\n          width={980}\n          height={551}\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n          }}\n          >\n          <ZoomableGroup center={[ 8.2, 46.8 ]} disablePanning>\n            <Geographies geography='/home/k0tix/Projects/co2reaktor/client/src/world-50m.json'>\n              {(geographies, projection) =>\n                geographies.map((geography, i) =>\n                  geography.id !== \"ATA\" && (\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: \"#ECEFF1\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                        hover: {\n                          fill: \"#607D8B\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                        pressed: {\n                          fill: \"#FF5722\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                      }}\n                    />\n              ))}\n            </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    )\n  }\n}\n\nexport default CountryMap","import React, { Component } from 'react';\n\nimport {  Grid } from 'semantic-ui-react'\n\nimport SiteHeader from './components/SiteHeader'\nimport SearchBar from './containers/SearchBar'\nimport EmissionChart from './components/EmissionChart'\nimport Footer from './components/Footer';\nimport { connect } from 'react-redux';\nimport { resultInitialization } from './reducers/searchReducer'\nimport MapSelector from './components/MapSelector';\n\nclass App extends Component {\n\n  componentDidMount = async () => {\n    this.props.resultInitialization()\n  }\n\n  render() {\n    return (\n      <div /*style={{backgroundColor: '#2e3238'}}*/>\n        <Grid centered textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n          <Grid.Row>\n            <Grid.Column style={{ maxWidth: 450 }}>\n              <SiteHeader title={'CO2-EMISSIONS'}></SiteHeader>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <SearchBar></SearchBar>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            {//<MapSelector></MapSelector>\n            }\n          </Grid.Row>\n        </Grid>\n        <Footer></Footer>\n      </div>\n    )\n\n  }\n}\n\nexport default connect(\n  null,\n  { resultInitialization }\n)(App)","import {createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport searchReducer from './reducers/searchReducer'\r\nimport countryReducer from './reducers/countryReducer'\r\n\r\nconst reducer = combineReducers({\r\n    search: searchReducer,\r\n    country: countryReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\nconst render = () => {\n    ReactDOM.render(\n        <Provider store={store} >\n            <App />\n        </Provider>,\n        document.getElementById('root'))\n}\n\nrender()\n\nstore.subscribe(render)"],"sourceRoot":""}